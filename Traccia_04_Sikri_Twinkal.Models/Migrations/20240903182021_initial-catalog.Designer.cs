// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Traccia_04_Sikri_Twinkal.Models.Context;

#nullable disable

namespace Traccia_04_Sikri_Twinkal.Models.Migrations
{
    [DbContext(typeof(ServizioDiPrenotazioneContext))]
    [Migration("20240903182021_initial-catalog")]
    partial class initialcatalog
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Prenotazione", b =>
                {
                    b.Property<int>("PrenotazioneId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PrenotazioneId"));

                    b.Property<DateOnly>("DataFine")
                        .HasColumnType("date");

                    b.Property<DateOnly>("DataInizio")
                        .HasColumnType("date");

                    b.Property<int>("RisorsaId")
                        .HasColumnType("int");

                    b.Property<int>("UtenteId")
                        .HasColumnType("int");

                    b.HasKey("PrenotazioneId");

                    b.HasIndex("RisorsaId");

                    b.HasIndex("UtenteId");

                    b.ToTable("Prenotazioni", (string)null);
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Risorsa", b =>
                {
                    b.Property<int>("RisorsaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RisorsaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipologiaRisorsaId")
                        .HasColumnType("int");

                    b.HasKey("RisorsaId");

                    b.HasIndex("TipologiaRisorsaId");

                    b.ToTable("Risorse", (string)null);
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.TipologiaRisorsa", b =>
                {
                    b.Property<int>("TipologiaRisorsaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipologiaRisorsaId"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TipologiaRisorsaId");

                    b.ToTable("TipologieRisorse", (string)null);
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Utente", b =>
                {
                    b.Property<int>("UtenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UtenteId"));

                    b.Property<string>("Cognome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UtenteId");

                    b.ToTable("Utente", (string)null);
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Prenotazione", b =>
                {
                    b.HasOne("Traccia_04_Sikri_Twinkal.Models.Entities.Risorsa", "Risorsa")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("RisorsaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Traccia_04_Sikri_Twinkal.Models.Entities.Utente", "Utente")
                        .WithMany("Prenotazioni")
                        .HasForeignKey("UtenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Risorsa");

                    b.Navigation("Utente");
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Risorsa", b =>
                {
                    b.HasOne("Traccia_04_Sikri_Twinkal.Models.Entities.TipologiaRisorsa", "TipologiaRisorsa")
                        .WithMany("Risorse")
                        .HasForeignKey("TipologiaRisorsaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TipologiaRisorsa");
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Risorsa", b =>
                {
                    b.Navigation("Prenotazioni");
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.TipologiaRisorsa", b =>
                {
                    b.Navigation("Risorse");
                });

            modelBuilder.Entity("Traccia_04_Sikri_Twinkal.Models.Entities.Utente", b =>
                {
                    b.Navigation("Prenotazioni");
                });
#pragma warning restore 612, 618
        }
    }
}
